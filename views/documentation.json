{
  "puppet_classes": [
    {
      "name": "uos_oracle_install",
      "file": "manifests/init.pp",
      "line": 3,
      "docstring": {
        "text": "== Class: uos_oracle_install",
        "tags": [
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "user"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "group"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_sid"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_base"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_inventory_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_home"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_version"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_software_file"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "database_type"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "update_bash_profile"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_software_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "compatible_version"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "control_files"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "control_files_paths"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "agent_directory"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_block_size"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_domain"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_file_multiblock_read_count"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "diagnostic_dest"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "job_queue_processes"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_recovery_file_dest"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_recovery_file_dest_size"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "log_archive_dest_1"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "log_archive_dest_10"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "log_archive_format"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "sga_target"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "pga_aggregate_target"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "nls_language"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "nls_territory"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "open_cursors"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "processes"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "remote_login_passwordfile"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "undo_management"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "undo_tablespace"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "nls_sort"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "use_large_pages"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "create_database"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "instance_download_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "server_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "protocol"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "port"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "net_service_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "tnsnames_server_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "server_type"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "service_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "script_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "script_names"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "script_template_names"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "dba_tools_folder"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "listener_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "patching_download_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "opatch_version"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "opatch_file"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "opatch_mnt_point"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "patch_number"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "patch_version"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "patch_file"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "patch_mnt_point"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "update_time_start"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "update_time_end"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "update_date"
          }
        ]
      },
      "defaults": {
        "user": "undef",
        "group": "undef",
        "oracle_sid": "undef",
        "oracle_base": "undef",
        "oracle_inventory_dir": "undef",
        "oracle_home": "undef",
        "oracle_version": "undef",
        "oracle_software_file": "undef",
        "database_type": "undef",
        "update_bash_profile": "undef",
        "oracle_software_dir": "undef",
        "compatible_version": "undef",
        "control_files": "undef",
        "control_files_paths": "undef",
        "agent_directory": "undef",
        "db_block_size": "undef",
        "db_domain": "undef",
        "db_file_multiblock_read_count": "undef",
        "diagnostic_dest": "undef",
        "job_queue_processes": "undef",
        "db_recovery_file_dest": "undef",
        "db_recovery_file_dest_size": "undef",
        "log_archive_dest_1": "undef",
        "log_archive_dest_10": "undef",
        "log_archive_format": "undef",
        "sga_target": "undef",
        "pga_aggregate_target": "undef",
        "nls_language": "undef",
        "nls_territory": "undef",
        "open_cursors": "undef",
        "processes": "undef",
        "remote_login_passwordfile": "undef",
        "undo_management": "undef",
        "undo_tablespace": "undef",
        "nls_sort": "undef",
        "use_large_pages": "undef",
        "create_database": "undef",
        "instance_download_dir": "undef",
        "server_name": "undef",
        "protocol": "undef",
        "port": "undef",
        "net_service_name": "undef",
        "tnsnames_server_name": "undef",
        "server_type": "undef",
        "service_name": "undef",
        "script_dir": "undef",
        "script_names": "undef",
        "script_template_names": "undef",
        "dba_tools_folder": "undef",
        "listener_name": "undef",
        "patching_download_dir": "undef",
        "opatch_version": "undef",
        "opatch_file": "undef",
        "opatch_mnt_point": "undef",
        "patch_number": "undef",
        "patch_version": "undef",
        "patch_file": "undef",
        "patch_mnt_point": "undef",
        "update_time_start": "undef",
        "update_time_end": "undef",
        "update_date": "undef"
      },
      "source": "class uos_oracle_install(\n        #frequent values\n        $user                            = undef,\n        $group                           = undef,\n        $oracle_sid                      = undef,\n        $oracle_base                     = undef,\n        $oracle_inventory_dir            = undef,\n        $oracle_home                     = undef,\n\n        #oracle softaware installation values\n        $oracle_version                  = undef,\n        $oracle_software_file            = undef,\n        $database_type                   = undef,\n        $update_bash_profile             = undef,\n        $oracle_software_dir             = undef,\n\n        #oracle SID file values\n        $compatible_version              = undef,\n        $control_files                   = undef,\n        $control_files_paths             = undef,\n\t\t$agent_directory                 = undef,\n        $db_block_size                   = undef,\n        $db_domain                       = undef,\n        $db_file_multiblock_read_count   = undef,\n        $diagnostic_dest                 = undef,\n        $job_queue_processes             = undef,\n        $db_recovery_file_dest           = undef,\n        $db_recovery_file_dest_size      = undef,\n        $log_archive_dest_1              = undef,\n        $log_archive_dest_10             = undef,\n        $log_archive_format              = undef,\n        $sga_target                      = undef,\n        $pga_aggregate_target            = undef,\n        $nls_language                    = undef,\n        $nls_territory                   = undef,\n        $open_cursors                    = undef,\n        $processes                       = undef,\n        $remote_login_passwordfile       = undef,\n        $undo_management                 = undef,\n        $undo_tablespace                 = undef,\n        $nls_sort                        = undef,\n        $use_large_pages                 = undef,\n\n        #oracle database instance values\n        $create_database                 = undef,\n        $instance_download_dir           = undef,\n        #listener.ora\n        $server_name                     = undef,\n        $protocol                        = undef,\n        $port                            = undef,\n        #tnsnames.ora\n        $net_service_name                = undef,\n        $tnsnames_server_name            = undef,\n        $server_type                     = undef,\n        $service_name                    = undef,\n        #startup-shutdown scripts\n        $script_dir                      = undef,\n        $script_names                    = undef,\n\t\t$script_template_names           = undef,\n\t\t$dba_tools_folder                = undef,\n\n        #oracle update utility values\n        $listener_name                   = undef,\n        $patching_download_dir           = undef,\n        #opatch file\n        $opatch_version                  = undef,\n        $opatch_file                     = undef,\n        $opatch_mnt_point                = undef,\n        #patch file\n        $patch_number                    = undef,\n        $patch_version                   = undef,\n        $patch_file                      = undef,\n        $patch_mnt_point                 = undef,\n\n        $update_time_start               = undef,\n        $update_time_end                 = undef,\n\t\t$update_date                     = undef,\n    ) {\n\n\n    ##special check to be sure that all this code runs ONLY on our development node\n    $proper_hostname = \"play01229\"\n    $proper_hostname2 = 'node1'\n    if ($facts['hostname'] == $proper_hostname) or ($facts['hostname'] == $proper_hostname2){\n\n    #first install oracle software, then create ini<SID>.ora file and all required directories\n    #finally - run sql scripts to create database physical database instance\n\n    #install oracle software\n    class {'uos_oracle_install::install_oracle':            #all the parameters are set in the start of the page as class parameters (and set to their default values)\n        #if init.pp class receives any parameters with values, default ones will be overwritten\n        oracle_version               => $oracle_version,\n        oracle_software_file         => $oracle_software_file,\n        database_type                => $database_type,\n        oracle_base                  => $oracle_base,\n        oracle_inventory_dir         => $oracle_inventory_dir,\n        oracle_sid                   => $oracle_sid,\n        oracle_home                  => $oracle_home,\n        bash_profile                 => $update_bash_profile,\n        user                         => $user,\n        group                        => $group,\n        group_install                => $group,\n        group_oper                   => $group,\n        oracle_software_dir          => $oracle_software_dir,\n\n        #all the parameters required for init<SID>.ora file\n        compatible_version           => $compatible_version,\n        control_files                => $control_files,\n        control_files_paths          => $control_files_paths,\n\t\tagent_directory              => $agent_directory,\n        db_block_size                => $db_block_size,\n        db_domain                    => $db_domain,\n        db_file_multiblock_read_count=> $db_file_multiblock_read_count,\n        diagnostic_dest              => $diagnostic_dest,\n        job_queue_processes          => $job_queue_processes,\n        db_recovery_file_dest        => $db_recovery_file_dest,\n        db_recovery_file_dest_size   => $db_recovery_file_dest_size,\n        log_archive_dest_1           => $log_archive_dest_1,\n        log_archive_dest_10          => $log_archive_dest_10,\n        log_archive_format           => $log_archive_format,\n        sga_target                   => $sga_target,\n        pga_aggregate_target         => $pga_aggregate_target,\n        nls_language                 => $nls_language,\n        nls_territory                => $nls_territory,\n        open_cursors                 => $open_cursors,\n        processes                    => $processes,\n        remote_login_passwordfile    => $remote_login_passwordfile,\n        undo_management              => $undo_management,\n        undo_tablespace              => $undo_tablespace,\n        nls_sort                     => $nls_sort,\n        use_large_pages              => $use_large_pages,\n\n        #these are required for creating database instance\n        create_database              => $create_database,\n        instance_download_dir        => $instance_download_dir,\n\n        listener_name                => $listener_name,\n        protocol                     => $protocol,\n        server_name                  => $server_name,\n        port                         => $port,\n\n        net_service_name             => $net_service_name,\n        server_type                  => $server_type,\n        service_name                 => $net_service_name,\n        tnsnames_server_name         => $tnsnames_server_name,\n\n        script_dir                   => $script_dir,\n        script_names                 => $script_names,\n    }\n\n\n\n    #patch database\n    class{ 'uos_oracle_install::apply_patch':\n        #all the parameters are set in the start of the page as class parameters (and set to their default values)\n        #if init.pp class receives any parameters with values, default ones will be overwritten\n        user                         => $user,\n        group                        => $group,\n        oracle_base                  => $oracle_base,\n        oracle_home                  => $oracle_home,\n\n        oracle_sid                   => $oracle_sid,\n        listener_name                => $listener_name,\n\n        patching_download_dir        => $patching_download_dir,\n\n        opatch_version               => $opatch_version,\n        opatch_file                  => $opatch_file,\n        opatch_mnt_point             => $opatch_mnt_point,\n\n        patch_number                 => $patch_number,\n        patch_version                => $patch_version,\n        patch_file                   => $patch_file,\n        patch_mnt_point              => $patch_mnt_point,\n\n        update_time_start            => $update_time_start,\n        update_time_end              => $update_time_end,\n\t\tupdate_date                  => $update_date,\n    }\n\n\n    }\n    else{\n        notify{ \"Can't run module since hostname is not ${proper_hostname}. Current hostname is ${facts['hostname']}\": }\n    }\n\n}"
    },
    {
      "name": "uos_oracle_install::apply_patch",
      "file": "manifests/apply_patch.pp",
      "line": 11,
      "docstring": {
        "text": "",
        "tags": [
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "user"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "group"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_base"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_home"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_sid"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "listener_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "patching_download_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "opatch_version"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "opatch_file"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "opatch_mnt_point"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "patch_number"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "patch_version"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "patch_file"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "patch_mnt_point"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "update_time_start"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "update_time_end"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "update_date"
          }
        ]
      },
      "defaults": {
        "user": "'oracle'",
        "group": "'oracle'",
        "oracle_base": "'/u01/app/oracle'",
        "oracle_home": "undef",
        "oracle_sid": "'orcl'",
        "listener_name": "'listener'",
        "patching_download_dir": "'/tmp'",
        "opatch_version": "undef",
        "opatch_file": "undef",
        "opatch_mnt_point": "undef",
        "patch_number": "undef",
        "patch_version": "undef",
        "patch_file": "undef",
        "patch_mnt_point": "undef",
        "update_time_start": "'09:00:00'",
        "update_time_end": "'15:00:00'",
        "update_date": "'11-12-2018'"
      },
      "source": "class uos_oracle_install::apply_patch(\n        $user             = 'oracle',\n        $group            = 'oracle',\n        $oracle_base      = '/u01/app/oracle',\n        $oracle_home      = undef,\n        $oracle_sid       = 'orcl',\n\t\t\n        $listener_name    = 'listener',\n\n        $patching_download_dir = '/tmp',#where puppet can put a opatch and patch files after downloading\n\n        $opatch_version   = undef,      #zip file with opatch folder in it #format differs from patch_version because of $ORACLE_HOME/OPatch/opatch version (e.g. '12.2.0.1.9')\n        $opatch_file      = undef,                                                                                                                         #(e.g. 'p6880880_121010_Linux-x86-64.zip')\n        $opatch_mnt_point = undef,      #path to the opatch file                                                                                           #(e.g. '/net/dbbackup/software/product/linux')\n\n        $patch_number     = undef,      #zip file with patch                                                                                               #(e.g. '25171037')\n        $patch_version    = undef,                                                                                                                         #(e.g. '121020')\n        $patch_file       = undef,                                                                                                                         #(e.g. 'p25171037_121020_Linux-x86-64.zip')\n        $patch_mnt_point  = undef,      #path to the patch zip file                                                                                        #(e.g. '/net/dbbackup/software/patches/linux/')\n\n        $update_time_start= '09:00:00',\n        $update_time_end  = '15:00:00',\n\t\t$update_date       = '11-12-2018',\n    ){\n    #check the time window\n    if (true){\n\t\t#Checks that essential values are specified before running anything\n\t\tif ($oracle_base == undef) or ($oracle_home == undef){\n\t\t\tfail('oracle home must be defined. Abort')\n\t\t}\n\t\telsif ($opatch_version == undef) or ($opatch_file == undef) or (opatch_mnt_point == undef){\n\t\t\tfail(\"Opatch file, version and opatch_mnt_point must be specified. Abort\")\n\t\t}\n\t\telsif ($patch_number == undef) or ($patch_version == undef) or ($patch_file == undef) or (patch_mnt_point == undef){\n\t\t\tfail('Patch number, version, file and mnt_point must be specified. Abort')\n\t\t}\n\t\n\t\t#if specified patch or opatch files do not exist in specified directories - exit\n\t\tif find_file(\"${opatch_mnt_point}/${opatch_file}\") == undef{\n\t\t\tfail(\"OPatch file not fount on the server at: ${opatch_mnt_point}/${opatch_file}. Abort\")\n\t\t}\n\t\telsif find_file(\"${patch_mnt_point}/${patch_file}\") == undef{\n\t\t\tfail(\"Patch file not fount on the server at: ${patch_mnt_point}/${patch_file}. Abort\")\n\t\t}\n\t\t\n\t\t#make sure oracle software is installed and\n\t\t#is the patch file provided in parameters already installed\n\t\tif (oradb::oracle_exists($oracle_home)) and (!oradb::is_oracle_patch_installed($oracle_home, $patch_number)){\n\n\t\t\t#make sure specified $user is capable of writing in download_dir\n\t\t\tfile{ 'download_dir':\n\t\t\t\tpath                        => $patching_download_dir,\n\t\t\t\tensure                      => directory,\n\t\t\t\tmode                        => '1777',\n\t\t\t} ->\n\n\t\t\t#stop the listener\n\t\t\tdb_listener{ 'stop_listener':\n\t\t\t\tensure                      => 'stop',  # running|start|abort|stop\n\t\t\t\toracle_base_dir             => $oracle_base,\n\t\t\t\toracle_home_dir             => $oracle_home,\n\t\t\t\tos_user                     => $user,\n\t\t\t\tlistener_name               => $listener_name,\n\t\t\t} ->\n\t\t\t\n\t\t\t#stop the database instance\n\t\t\tdb_control{ 'stop_database':\n\t\t\t\tensure                      => 'stop', #running|start|abort|stop\n\t\t\t\tinstance_name               => $oracle_sid,\n\t\t\t\toracle_product_home_dir     => $oracle_home,\n\t\t\t\tos_user                     => $user,\n\t\t\t} ->\n\n\n\t\t\t#upgrades the opatch utility\n\t\t\toradb::opatchupgrade{ \"${opatch_version}_opatch_upgrade\":\n\t\t\t\toracle_home               => $oracle_home,\n\t\t\t\tpatch_file                => $opatch_file,\n\t\t\t\topversion                 => $opatch_version,\n\t\t\t\tuser                      => $user,\n\t\t\t\tgroup                     => $group,\n\t\t\t\tdownload_dir              => $patching_download_dir,\n\t\t\t\tpuppet_download_mnt_point => $opatch_mnt_point,\n\t\t\t} ->\n\n\n\t\t\t#applies the patch\n\t\t\toradb::opatch{\"${patch_version}_db_patch\":\n\t\t\t\tensure                      => present,\n\t\t\t\toracle_product_home         => $oracle_home,\n\t\t\t\tpatch_id                    => $patch_number,\n\t\t\t\tpatch_file                  => $patch_file,\n\t\t\t\tuser                        => $user,\n\t\t\t\tgroup                       => $group,\n\t\t\t\tdownload_dir                => $patching_download_dir,\n\t\t\t\tocmrf                       => false,\n\t\t\t\tpuppet_download_mnt_point   => $patch_mnt_point,\n\t\t\t} ->\n\n\t\t\t#start the database instance\n\t\t\tdb_control{ 'start_database':\n\t\t\t\tensure                      => 'running', #running|start|abort|stop\n\t\t\t\tinstance_name               => $oracle_sid,\n\t\t\t\toracle_product_home_dir     => $oracle_home,\n\t\t\t\tos_user                     => $user,\n\t\t\t} ->\n\n\t\t\t#start the listener\n\t\t\tdb_listener{ 'start_listener':\n\t\t\t\tensure                      => 'running',  # running|start|abort|stop\n\t\t\t\toracle_base_dir             => $oracle_base,\n\t\t\t\toracle_home_dir             => $oracle_home,\n\t\t\t\tos_user                     => $user,\n\t\t\t\tlistener_name               => $listener_name,\n\t\t\t} ->\n\n\t\t\t#run datapatch command\n\t\t\texec{ 'run_datapatch':\n\t\t\t\tcommand                     => 'datapatch -verbose',\n\t\t\t\tpath                        => \"${oracle_home}/OPatch/\",\n\t\t\t\tuser                        => $user,\n\t\t\t\tgroup                       => $group,\n\t\t\t\tenvironment                 => [\"ORACLE_HOME=${oracle_home}\", \"ORACLE_SID=${oracle_sid}\", \"LD_LIBRARY_PATH=${oracle_home}/lib\"],\n\t\t\t\trequire                     => Db_control['start_database'],\n\t\t\t\ttimeout                     => 1200,\n\t\t\t}\n\n\t\t}\n\n    }\n\n}"
    },
    {
      "name": "uos_oracle_install::create_database",
      "file": "manifests/create_database.pp",
      "line": 6,
      "docstring": {
        "text": "-- Class: create_database\n\nruns sql script to start oracle without mounting database \"startup nomunt\"\nruns script to create physical database\nruns post installation script",
        "tags": [
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "user"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "group"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_home"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "instance_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_sid"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "instance_download_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "listener_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "protocol"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "server_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "port"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "net_service_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "server_type"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "service_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "tnsnames_server_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "script_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "script_names"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "script_template_names"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "dba_tools_folder"
          }
        ]
      },
      "defaults": {
        "user": "\"oracle\"",
        "group": "\"oracle\"",
        "oracle_home": "undef",
        "instance_name": "undef",
        "oracle_sid": "$instance_name",
        "instance_download_dir": "\"/tmp\"",
        "listener_name": "\"listener\"",
        "protocol": "\"TCP\"",
        "server_name": "\"${facts['hostname']}.${facts['domain']}\"",
        "port": "1521",
        "net_service_name": "\"recovlog.soton.ac.uk\"",
        "server_type": "\"DEDICATED\"",
        "service_name": "$net_service_name",
        "tnsnames_server_name": "\"srv00128.soton.ac.uk\"",
        "script_dir": "'/oracle01/init.d'",
        "script_names": "[\"K01agent13c\", \"K80listener\", \"oraAgenv\", \"oraenv\", \"S20listener\", \"S99agent13c\"]",
        "script_template_names": "[\"K50db.erb\", \"S50db.erb\"]",
        "dba_tools_folder": "'/net/dbbackup/software/patches/linux/PUPPET_FILES/DBA_TOOLS'"
      },
      "source": "class uos_oracle_install::create_database(\n        $user               = \"oracle\",\n        $group              = \"oracle\",\n        $oracle_home        = undef,\n        $instance_name      = undef,\n\t\t$oracle_sid\t\t\t= $instance_name,\n        $instance_download_dir = \"/tmp\", #directory to which oracle scripts are downloaded\n\n        #listener.ora parameters\n        $listener_name      = \"listener\",\n        $protocol           = \"TCP\",\n        $server_name        = \"${facts['hostname']}.${facts['domain']}\",\n        $port               = 1521,\n\n        #tnsnames.ora parameters\n        $net_service_name   = \"recovlog.soton.ac.uk\",\n        $server_type        = \"DEDICATED\",\n        $service_name       = $net_service_name,\n        $tnsnames_server_name = \"srv00128.soton.ac.uk\",\n\n        #startup-shutdown scripts\n        $script_dir         = '/oracle01/init.d',\n        $script_names       = [\"K01agent13c\", \"K80listener\", \"oraAgenv\", \"oraenv\", \"S20listener\", \"S99agent13c\"],\n\t\t$script_template_names = [\"K50db.erb\", \"S50db.erb\"],\n\t\t$dba_tools_folder   = '/net/dbbackup/software/patches/linux/PUPPET_FILES/DBA_TOOLS',\n    ){\n\n    #check $oracle_home\n    if ($oracle_home == undef){\n        fail(\"Oracle home must be specified. Abort\")\n    }\n\telsif ($instance_name == undef){\n\t\tfail(\"Instance_name must be specified. Abort\")\n\t}\n\telsif ($oracle_sid == undef){\n\t\tfail(\"Oracle_sid must be specified. Abort\")\n\t}\n\t\n\n    #copying scripts to local machine to run them\n    info(\"Copying scripts to agent machine ${instance_download_dir} folder\")\n\n    #nomount script\n    file{\"copy_nomount\":\n        path        => \"${instance_download_dir}/nomount.sql\",\n        ensure      => present,\n        owner       => $user,\n        group       => $group,\n        mode        => '0750',\n        source      => \"puppet:///modules/uos_oracle_install/nomount.sql\",\n    } ->\n    #db_setup script\n    file{\"copy_db_setup\":\n        path        => \"${instance_download_dir}/db_setup.sql\",\n        ensure      => present,\n        owner       => $user,\n        group       => $group,\n        mode        => '0750',\n        content     => template(\"uos_oracle_install/db_setup.sql.erb\"),\n    } ->\n    #post_install script\n    file{\"copy_post_install\":\n        path        => \"${instance_download_dir}/post_install.sql\",\n        ensure      => present,\n        owner       => $user,\n        group       => $group,\n        mode        => '0750',\n        source      => \"puppet:///modules/uos_oracle_install/post_install.sql\",\n    }\n\n    #running scripts\n    info(\"Running scripts from ${instance_download_dir} folder\")\n    #run startup nomount command\n    exec{\"run_nomount\":\n        user        => $user,\n        group       => $group,\n        path        => \"${oracle_home}/bin\",\n        environment => [\"ORACLE_HOME=${oracle_home}\", \"ORACLE_SID=${instance_name}\", \"LD_LIBRARY_PATH=${oracle_home}/lib\"],\n#        command     => \"sqlplus / as sysdba @/etc/puppetlabs/code/environments/production/modules/uos_oracle_install/files/nomount.sql\",\n        command     => \"sqlplus / AS SYSDBA @${instance_download_dir}/nomount.sql\",\n        require     => File['copy_post_install'],\n    } ->\n\n    #create a physical oracle instance\n    exec{\"sql_setup\":\n        user        => $user,\n        group       => $user,\n        path        => \"${oracle_home}/bin\",\n        environment => [\"ORACLE_HOME=${oracle_home}\", \"ORACLE_SID=${instance_name}\", \"LD_LIBRARY_PATH=${oracle_home}/lib\"],\n        command     => \"sqlplus / as sysdba @${instance_download_dir}/db_setup.sql\",\n\t    timeout\t    => 3600,#timer is set to 60min, the default is 5min\n    } ->\n\n    #run post install script\n    exec{\"post_install\":\n        user        => $user,\n        group       => $user,\n        path        => \"${oracle_home}/bin\",\n        environment => [\"ORACLE_HOME=${oracle_home}\", \"ORACLE_SID=${instance_name}\", \"LD_LIBRARY_PATH=${oracle_home}/lib\"],\n        command     => \"sqlplus / as sysdba @${instance_download_dir}/post_install.sql\",\n        timeout     => 3600,                 #timer is set to 60min\n    }\n\n\n    #creating listener.ora and tnsnames.ora files\n    info(\"Creating listener listener.ora file\")\n\n    #should never happen anymore since default values are set\n    #Fails if server_name or net_service_name are undefined\n    if ($server_name == undef) or ($net_service_name == undef) or ($tnsnames_server_name == undef){\n        fail(\"server_name, net_service_name and tns_names_server_name must be specified. Abort\")\n    }\n\n    #creating listener.ora file from template\n    file { 'create_listener.ora_file':\n        path        =>\"${oracle_home}/network/admin/listener.ora\",\n        content     => template('uos_oracle_install/listener.ora.erb'),\n        ensure      => present,\n        owner       => $user,\n        group       => $group,\n        mode        => '750',\n        require     => Exec[\"post_install\"],\n    }\n\n    #creating tnsnames.ora file from template\n    file { 'create_tnsnames.ora_file':\n        path        =>\"${oracle_home}/network/admin/tnsnames.ora\",\n        content     => template('uos_oracle_install/tnsnames.ora.erb'),\n        ensure      => present,\n        owner       => $user,\n        group       => $group,\n        mode        => '750',\n        require     => Exec[\"post_install\"],\n    }\n\t\n\t#copying sqlnet.ora file from a template\n\tfile { 'copy_sqlnet.ora_file':\n        path        =>\"${oracle_home}/network/admin/sqlnet.ora\",\n        source      => \"puppet:///modules/uos_oracle_install/sqlnet.ora\",\n        ensure      => present,\n        owner       => $user,\n        group       => $group,\n        mode        => '750',\n        require     => Exec[\"post_install\"],\n    }\n\n\t#copying ldap.ora file from a template\n\tfile { 'create_ldap.ora_file':\n        path        =>\"${oracle_home}/network/admin/ldap.ora\",\n        source      => \"puppet:///modules/uos_oracle_install/ldap.ora\",\n        ensure      => present,\n        owner       => $user,\n        group       => $group,\n        mode        => '750',\n        require     => Exec[\"post_install\"],\n    }\n\n    #copying startup-shutdown scripts\n    info(\"Creating ${script_dir} and putting startup-shutdown files in it\")\n\n    #creates directory if it doesn't exist\n    file { 'create_init.d_dir':\n        path        => $script_dir,\n        ensure      => directory,\n        owner       => $user,\n        group       => $group,\n        mode        => '750',\n        require     => File['create_tnsnames.ora_file'],\n    }\n\n    #creating files\n    $script_names.each |$script| {\n        #for every script file name in an array\n        #copy it to the folder\n        if ($script == \"oraenv\"){\n\t\tfile { \"${script_dir}/${script}\":\n\t\t\tsource      => \"puppet:///modules/uos_oracle_install/${script}\",\n\t\t\tensure      => present,\n\t\t\towner       => $user,\n\t\t\tgroup       => $group,\n\t\t\tmode        => '755',\n\t\t\trequire     => File['create_init.d_dir'],\n\t\t} ->\n\t\texec{\"edit oraenv\":\n\t\t\tuser        => $user,\n\t\t\tgroup       => $user,\n\t\t\tpath \t    => \"/bin\",\n\t\t\tcommand     => \"sed -i 's|oracle01/app/Oracle/product/12cR1|${oracle_home}|g' ${script_dir}/${script}\",\n\t\t\ttimeout     => 10,\n\t\t}\n\t} else {\n\t\tfile { \"${script_dir}/${script}\":\n\t\t    source      => \"puppet:///modules/uos_oracle_install/${script}\",\n\t\t    ensure      => present,\n\t\t    owner       => $user,\n\t\t    group       => $group,\n\t\t    mode        => '755',\n\t\t    require     => File['create_init.d_dir'],\n\t\t}\n\t}\n\n    }\n\n    #creating files from templates\n    $script_template_names.each |$script2| {\n        #for every script file name in an array\n        #copy it to the folder\n        file { $script2:\n\t\t\tpath\t\t=> inline_template(\"<%= @script_dir + '/' + @script2.split('.')[0] + '-' + @oracle_sid %>\"),\n            content     => template(\"uos_oracle_install/${script2}\"),\n            ensure      => present,\n            owner       => $user,\n            group       => $group,\n            mode        => '755',\n            require     => File['create_init.d_dir'],\n        }\n\n    }\n\t\n\t\n\t#make a warning if specified DBA_TOOLS folder does not exist in specified directories\n    if find_file(\"${dba_tools_folder}\") != undef{\n\t\t#copying DBA_TOOLS folder\n\t\tfile { \"/home/${user}/DBA_TOOLS\":\n\t\t\tensure => 'directory',\n\t\t\tsource => $dba_tools_folder,\n\t\t\trecurse => 'remote',\n\t\t\towner => $user,\n\t\t\tgroup => $group,\n\t\t\tmode  => '755',\n\t\t}\n\t\t\n\t}\n\telse{\n\t\tnotify{\"WARNING: $dba_tools_folder was not found. DBA_TOOLS will not be copied but installation will continue.\": }\n\t}\n\t\n\t\n    #appending\n    info(\"Appending /etc/oradb file\")\n\t#appending /etc/oratab\n\tfile_line{ '/etc/oratab':\n\t\tensure      => present,\n\t\tline        => \"${oracle_sid}:${oracle_home}:N\",\n\t\tpath        => \"/etc/oratab\",\n\t\trequire     => File['create_init.d_dir'],\n\t}\n\n    info(\"execution finished\")\n\n}"
    },
    {
      "name": "uos_oracle_install::create_initsid",
      "file": "manifests/create_initsid.pp",
      "line": 6,
      "docstring": {
        "text": "",
        "tags": [
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_home"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_base"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_sid"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "user"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "group"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "compatible"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "control_files"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "control_files_paths"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "agent_directory"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_block_size"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_domain"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_file_multiblock_read_count"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "diagnostic_dest"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "job_queue_processes"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_recovery_file_dest"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_recovery_file_dest_size"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "log_archive_dest_1"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "log_archive_dest_10"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "log_archive_format"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "sga_target"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "pga_aggregate_target"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "nls_language"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "nls_territory"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "open_cursors"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "processes"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "remote_login_passwordfile"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "undo_management"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "undo_tablespace"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "nls_sort"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "use_large_pages"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "database_dir"
          }
        ]
      },
      "defaults": {
        "oracle_home": "undef",
        "oracle_base": "undef",
        "oracle_sid": "undef",
        "user": "'oracle'",
        "group": "'oracle'",
        "compatible": "'12.0.0'",
        "control_files": "[\"'/oracle02/oradata/${oracle_sid}/control01.ctl'\",\"'/oracle03/oradata/${oracle_sid}/control02.ctl'\", \"'/oracle04/oradata/${oracle_sid}/control03.ctl'\"]",
        "control_files_paths": "[\"/oracle02/oradata/${oracle_sid}\",\"/oracle03/oradata/${oracle_sid}\", \"/oracle04/oradata/${oracle_sid}\"]",
        "agent_directory": "\"${oracle_base}/agent13c\"",
        "db_block_size": "8192",
        "db_domain": "'soton.ac.uk'",
        "db_file_multiblock_read_count": "128",
        "diagnostic_dest": "'/oracle01/admin'",
        "job_queue_processes": "10",
        "db_recovery_file_dest": "'/oracle04/FRA'",
        "db_recovery_file_dest_size": "'5G'",
        "log_archive_dest_1": "'/oracle03/admin/arch'",
        "log_archive_dest_10": "'USE_DB_RECOVERY_FILE_DEST'",
        "log_archive_format": "'arch_%t_%s_%r.arc'",
        "sga_target": "'1024M'",
        "pga_aggregate_target": "'512M'",
        "nls_language": "'ENGLISH'",
        "nls_territory": "'UNITED KINGDOM'",
        "open_cursors": "600",
        "processes": "300",
        "remote_login_passwordfile": "'EXCLUSIVE'",
        "undo_management": "'AUTO'",
        "undo_tablespace": "'UNDO'",
        "nls_sort": "'WEST_EUROPEAN'",
        "use_large_pages": "'ONLY'",
        "database_dir": "'/oracle01/oradata/${oracle_sid}'"
      },
      "source": "class uos_oracle_install::create_initsid(\n        $oracle_home                    = undef,\n        $oracle_base                    = undef,\n        $oracle_sid                     = undef,\n        $user                           = 'oracle',\n        $group                          = 'oracle',\n\n        $compatible                     = '12.0.0',\n        $control_files                  = [\"'/oracle02/oradata/${oracle_sid}/control01.ctl'\",\"'/oracle03/oradata/${oracle_sid}/control02.ctl'\", \"'/oracle04/oradata/${oracle_sid}/control03.ctl'\"],\n        $control_files_paths            = [\"/oracle02/oradata/${oracle_sid}\",\"/oracle03/oradata/${oracle_sid}\", \"/oracle04/oradata/${oracle_sid}\"],\n\t\t$agent_directory                = \"${oracle_base}/agent13c\",\n        $db_block_size                  = 8192,\n        $db_domain                      = 'soton.ac.uk',\n        $db_file_multiblock_read_count  = 128,\n        $diagnostic_dest                = '/oracle01/admin',\n        $job_queue_processes            = 10,\n        $db_recovery_file_dest          = '/oracle04/FRA',\n        $db_recovery_file_dest_size     = '5G',\n        $log_archive_dest_1             = '/oracle03/admin/arch',\n        $log_archive_dest_10            = 'USE_DB_RECOVERY_FILE_DEST',\n        $log_archive_format             = 'arch_%t_%s_%r.arc',\n        $sga_target                     = '1024M',\n        $pga_aggregate_target           = '512M',\n        $nls_language                   = 'ENGLISH',\n        $nls_territory                  = 'UNITED KINGDOM',\n        $open_cursors                   = 600,\n        $processes                      = 300,\n        $remote_login_passwordfile      = 'EXCLUSIVE',\n        $undo_management                = 'AUTO',\n        $undo_tablespace                = 'UNDO',\n        $nls_sort                       = 'WEST_EUROPEAN',\n        $use_large_pages                = 'ONLY',\n\n        $database_dir                   = '/oracle01/oradata/${oracle_sid}'\n    ){\n\n    if ($oracle_home==undef) or ($oracle_sid==undef) or ($oracle_base==undef){\n        fail(\"oracle_home, oracle_sid and oracle_base must be specified. Aborting\")\n    }\n\n    #dirtree creates directory trees from a given path and returns an array with every dir sub-level as an element\n    #concat combines all the arrays into one\n    #unique removes any duplicates (essential for maintaining unique resource title\n/*\n    $combined_path = delete_regex(unique(concat(dirtree($control_files_paths, $oracle_home),\n                                   dirtree($diagnostic_dest, $oracle_home),\n                                   dirtree($db_recovery_file_dest, $oracle_home),\n                                   dirtree($log_archive_dest_1, $oracle_home),\n                                   dirtree($database_dir, $oracle_home) )), '^/oracle0\\d$' )\n*/\n\n    $combined_path = delete(delete(delete(unique(concat(dirtree($control_files_paths, $oracle_home),\n                                   dirtree($diagnostic_dest, $oracle_home),\n                                   dirtree($db_recovery_file_dest, $oracle_home),\n                                   dirtree($log_archive_dest_1, $oracle_home),\n                                   dirtree($database_dir, $oracle_home),\n\t\t\t\t\t\t\t\t   dirtree($agent_directory, $oracle_home) )), '/oracle02' ), '/oracle03' ), '/oracle04' )\n\n    #creates every directory in the $combined_path array\n    file { $combined_path:\n        ensure  => directory,\n        owner   => $user,\n        group   => $group,\n        mode    => '750',\n    } ->\n\n    #create init<SID> file from the template\n    file { 'create init<SID>.ora file':\n        path    => \"${oracle_home}/dbs/init${oracle_sid}.ora\",\n        content => template('uos_oracle_install/initSID.ora.erb'),\n        ensure  => present,\n        owner   => $user,\n        group   => $group,\n        mode    => '750',\n    }\n\n}"
    },
    {
      "name": "uos_oracle_install::install_oracle",
      "file": "manifests/install_oracle.pp",
      "line": 7,
      "docstring": {
        "text": "",
        "tags": [
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_version"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_software_file"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "database_type"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_base"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_home"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_inventory_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_sid"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "bash_profile"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "user"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "group"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "group_install"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "group_oper"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "group_backup"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "group_dg"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "group_km"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "group_rac"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_software_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "compatible_version"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "control_files"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "control_files_paths"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "agent_directory"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_block_size"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_domain"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_file_multiblock_read_count"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "diagnostic_dest"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "job_queue_processes"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_recovery_file_dest"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_recovery_file_dest_size"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "log_archive_dest_1"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "log_archive_dest_10"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "log_archive_format"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "sga_target"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "pga_aggregate_target"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "nls_language"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "nls_territory"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "open_cursors"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "processes"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "remote_login_passwordfile"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "undo_management"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "undo_tablespace"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "nls_sort"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "use_large_pages"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "create_database"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "instance_download_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "listener_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "protocol"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "server_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "port"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "net_service_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "server_type"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "service_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "tnsnames_server_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "script_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "script_names"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "script_template_names"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "dba_tools_folder"
          }
        ]
      },
      "defaults": {
        "oracle_version": "undef",
        "oracle_software_file": "undef",
        "database_type": "'EE'",
        "oracle_base": "'/oracle01/app/Oracle'",
        "oracle_home": "undef",
        "oracle_inventory_dir": "undef",
        "oracle_sid": "'orcl'",
        "bash_profile": "true",
        "user": "'oracle'",
        "group": "'oracle'",
        "group_install": "$group",
        "group_oper": "$group",
        "group_backup": "$group",
        "group_dg": "$group",
        "group_km": "$group",
        "group_rac": "$group",
        "oracle_software_dir": "undef",
        "compatible_version": "$oracle_version",
        "control_files": "undef",
        "control_files_paths": "undef",
        "agent_directory": "undef",
        "db_block_size": "undef",
        "db_domain": "undef",
        "db_file_multiblock_read_count": "undef",
        "diagnostic_dest": "undef",
        "job_queue_processes": "undef",
        "db_recovery_file_dest": "undef",
        "db_recovery_file_dest_size": "undef",
        "log_archive_dest_1": "undef",
        "log_archive_dest_10": "undef",
        "log_archive_format": "undef",
        "sga_target": "undef",
        "pga_aggregate_target": "undef",
        "nls_language": "undef",
        "nls_territory": "undef",
        "open_cursors": "undef",
        "processes": "undef",
        "remote_login_passwordfile": "undef",
        "undo_management": "undef",
        "undo_tablespace": "undef",
        "nls_sort": "undef",
        "use_large_pages": "undef",
        "create_database": "true",
        "instance_download_dir": "undef",
        "listener_name": "undef",
        "protocol": "undef",
        "server_name": "undef",
        "port": "undef",
        "net_service_name": "undef",
        "server_type": "undef",
        "service_name": "undef",
        "tnsnames_server_name": "undef",
        "script_dir": "undef",
        "script_names": "undef",
        "script_template_names": "undef",
        "dba_tools_folder": "undef"
      },
      "source": "class uos_oracle_install::install_oracle(\n\t$oracle_version                 = undef,                #['11.2.0.1','11.2.0.3','11.2.0.4','12.1.0.1','12.1.0.2','12.2.0.1, 18.0.0.0'] on oradb v3.0.18\n\t$oracle_software_file           = undef,                #name of software directory\n\t$database_type                  = 'EE',                 #['SE', 'EE', 'SEONE']\n\t$oracle_base                    = '/oracle01/app/Oracle',\n\t$oracle_home                    = undef,\n\t$oracle_inventory_dir           = undef,\n\t$oracle_sid                     = 'orcl',\n\t$bash_profile                   = true,                 #append bash_profile (ORACLE_HOME, ORACLE_LIB, PATH)\n\t$user                           = 'oracle',             #user that will USE the db\n\t$group                          = 'oracle',             #user's group\n\t$group_install                  = $group,               #user that will install the software\n\t$group_oper                     = $group,               #installation user group\n\t$group_backup                   = $group,\n\t$group_dg                       = $group,\n\t$group_km                       = $group,\n\t$group_rac                      = $group,\n\t$oracle_software_dir            = undef,                #folder there $oracle_software_file resides\n\n\t#oracle SID file values\n\t#default values specified in create_initsid.pp file\n\t$compatible_version              = $oracle_version,\n\t$control_files                   = undef,\n\t$control_files_paths             = undef,\n\t$agent_directory                 = undef,\n\t$db_block_size                   = undef,\n\t$db_domain                       = undef,\n\t$db_file_multiblock_read_count   = undef,\n\t$diagnostic_dest                 = undef,\n\t$job_queue_processes             = undef,\n\t$db_recovery_file_dest           = undef,\n\t$db_recovery_file_dest_size      = undef,\n\t$log_archive_dest_1              = undef,\n\t$log_archive_dest_10             = undef,\n\t$log_archive_format              = undef,\n\t$sga_target                      = undef,\n\t$pga_aggregate_target            = undef,\n\t$nls_language                    = undef,\n\t$nls_territory                   = undef,\n\t$open_cursors                    = undef,\n\t$processes                       = undef,\n\t$remote_login_passwordfile       = undef,\n\t$undo_management                 = undef,\n\t$undo_tablespace                 = undef,\n\t$nls_sort                        = undef,\n\t$use_large_pages                 = undef,\n\n\t#oracle database creation values\n\t#default values specified in create_database.pp file\n\t$create_database                = true,\n\t$instance_download_dir          = undef,\n\t$listener_name                  = undef,\n\t$protocol                       = undef,\n\t$server_name                    = undef,\n\t$port                           = undef,\n\t$net_service_name               = undef,\n\t$server_type                    = undef,\n\t$service_name                   = undef,\n\t$tnsnames_server_name           = undef,\n\t$script_dir                     = undef,\n\t$script_names                   = undef,\n\t$script_template_names          = undef,\n\t$dba_tools_folder               = undef,\n\t) {\n\n\t#these folders have to be created in this awkward way right here because oradb module\n\t#does not change oracle_home parent directory ownership to the oracle user\n\t$oracle_base_dir_tree = delete(dirtree($oracle_base), '/oracle01')\n\tfile{$oracle_base_dir_tree:\t\t\n\t\t ensure  => directory,\t\t\n\t\t owner   => $user,\n\t group   => $group,\n\t\t mode    => '750',\n\t } ->\n\tfile{\"${oracle_inventory_dir}/oraInventory\":\t\t\n\t\t ensure  => directory,\t\t\n\t\t owner   => $user,\n\t group   => $group,\n\t\t mode    => '750',\t\t\n\t }\n\t# If the oracle version is 18.0.0.0, then the home dir must also be created in a similar way\n\t# to the base because the oradb module will unzip the package in this dir. Also, the ownership\n\t# must be changed as well to the oracle user and group\n\tif ($oracle_version in ['18.0.0.0']){\n\t   $oracle_home_dir_tree = delete(dirtree($oracle_home), '/oracle01')\n\t   $home_dir_tree = $oracle_home_dir_tree.filter | $dirs | {!($dirs in $oracle_base_dir_tree)}\n\t\tfile{$home_dir_tree:\n\t\t\tensure  => directory,\n\t\t\towner   => $user,\n\t\t\tgroup   => $group,\n\t\t\tmode    => '750',\n\t\t\trequire => [File[$oracle_base_dir_tree],File[\"${oracle_inventory_dir}/oraInventory\"]]\n\t\t}\n\t}\n\t#only runs if oracle is not already installed in the specified folder\n\tif !oradb::oracle_exists($oracle_home){\n\t\t#some checks for required values\n\t\tif $oracle_software_dir==undef{\n\t\t\tfail(\"oracle software directory must be specified in parameter 'oracle_software_dir'. Aborting\")\n\t\t}\n\t\telsif $oracle_software_file==undef{\n\t\t\tfail(\"oracle software file must be specified in parameter 'oracle_software_file'. Abort\")\n\t\t}\n\t\telsif $oracle_version==undef{\n\t\t\tfail(\"oracle software version must be specified in parameter 'oracle_version'. Abort\")\n\t\t}\n\t\telsif $oracle_inventory_dir==undef{\n\t\t\tfail(\"oracle inventory directory must be specified in parameter 'oracle_inventory_dir'. Abort\")\n\t\t}\n\t\telsif $oracle_home==undef{\n\t\t\tfail(\"oracle home path must be specified in parameter 'oracle_home'. Abort\")\n\t\t}\n\t\tclass{\"uos_oracle_install::install_oracle_common\":\n\t\t\toracle_version                  => $oracle_version,      #['11.2.0.1','11.2.0.3','11.2.0.4','12.1.0.1','12.1.0.2','12.2.0.1', '18.0.0.0'] on oradb v3.0.18\n\t\t\toracle_base                     => $oracle_base,\n\t\t\toracle_home                     => $oracle_home,\n\t\t\toracle_sid                      => $oracle_sid,\n\t\t\tbash_profile                    => $bash_profile,        #append bash_profile (ORACLE_HOME, ORACLE_LIB, PATH)\n\t\t\tuser                            => $user,                #user that will USE the db\n\t\t\tgroup                           => $group,               #user's group\n\t\t\toracle_software_dir             => $oracle_software_dir, #folder there $oracle_software_file resides\n\n\t\t\tcompatible_version              => $compatible_version,\n\t\t\tcontrol_files                   => $control_files,\n\t\t\tcontrol_files_paths             => $control_files_paths,\n\t\t\tagent_directory                 => $agent_directory,\n\t\t\tdb_block_size                   => $db_block_size,\n\t\t\tdb_domain                       => $db_domain,\n\t\t\tdb_file_multiblock_read_count   => $db_file_multiblock_read_count,\n\t\t\tdiagnostic_dest                 => $diagnostic_dest,\n\t\t\tjob_queue_processes             => $job_queue_processes,\n\t\t\tdb_recovery_file_dest           => $db_recovery_file_dest,\n\t\t\tdb_recovery_file_dest_size      => $db_recovery_file_dest_size,\n\t\t\tlog_archive_dest_1              => $log_archive_dest_1,\n\t\t\tlog_archive_dest_10             => $log_archive_dest_10,\n\t\t\tlog_archive_format              => $log_archive_format,\n\t\t\tsga_target                      => $sga_target,\n\t\t\tpga_aggregate_target            => $pga_aggregate_target,\n\t\t\tnls_language                    => $nls_language,\n\t\t\tnls_territory                   => $nls_territory,\n\t\t\topen_cursors                    => $open_cursors,\n\t\t\tprocesses                       => $processes,\n\t\t\tremote_login_passwordfile       => $remote_login_passwordfile,\n\t\t\tundo_management                 => $undo_management,\n\t\t\tundo_tablespace                 => $undo_tablespace,\n\t\t\tnls_sort                        => $nls_sort,\n\t\t\tuse_large_pages                 => $use_large_pages,\n\n\t\t\tcreate_database                 => $create_database,\n\t\t\tinstance_download_dir           => $instance_download_dir,\n\t\t\tlistener_name                   => $listener_name,\n\t\t\tprotocol                        => $protocol,\n\t\t\tserver_name                     => $server_name,\n\t\t\tport                            => $port,\n\t\t\tnet_service_name                => $net_service_name,\n\t\t\tserver_type                     => $server_type,\n\t\t\tservice_name                    => $service_name,\n\t\t\ttnsnames_server_name            => $tnsnames_server_name,\n\t\t\tscript_dir                      => $script_dir,\n\t\t\tscript_names                    => $script_names,\n\t\t\tscript_template_names           => $script_template_names,\n\t\t\tdba_tools_folder                => $dba_tools_folder,\n\t\t}\n\t\t# For oracle 18c, the zip_extract parameter will be set to true as the oradb module treats this version differently compared to the older ones\n\t\t# Instead of working in the download dir, the oradb module will change the directory to ORACLE_HOME and will attemp to ./runInstaller in that dir,\n\t\t# so therefore the package must be extracted there from the shared folder before this happens\n\t\tif ($oracle_version in ['18.0.0.0']){\n\t\t\toradb::installdb{ \"oracle_installation\":\n\t\t\t\tversion                   => $oracle_version,\n\t\t\t\tfile                      => $oracle_software_file,\n\t\t\t\tdatabase_type             => $database_type,\n\t\t\t\toracle_base               => $oracle_base,\n\t\t\t\tora_inventory_dir         => $oracle_inventory_dir,\n\t\t\t\toracle_home               => $oracle_home,\n\t\t\t\tbash_profile              => $bash_profile,\n\t\t\t\tuser                      => $user,\n\t\t\t\tgroup                     => $group,\n\t\t\t\tgroup_install             => $group_install,\n\t\t\t\tgroup_oper                => $group_oper,\n\t\t\t\tgroup_backup              => $group_backup,\n\t\t\t\tgroup_dg                  => $group_dg,\n\t\t\t\tgroup_km                  => $group_km,\n\t\t\t\tgroup_rac                 => $group_rac,\n\t\t\t\tdownload_dir              => $oracle_software_dir,\n\t\t\t\tremote_file               => false,\n\t\t\t\tzip_extract               => true,\n\t\t\t\tpuppet_download_mnt_point => $oracle_software_dir,\n\t\t\t\t} -> Class['uos_oracle_install::install_oracle_common']\n\t\t}\n\t\telse {\n\t\t\toradb::installdb{ \"oracle_installation\":\n\t\t\t\tversion                   => $oracle_version,\n\t\t\t\tfile                      => $oracle_software_file,\n\t\t\t\tdatabase_type             => $database_type,\n\t\t\t\toracle_base               => $oracle_base,\n\t\t\t\tora_inventory_dir         => $oracle_inventory_dir,\n\t\t\t\toracle_home               => $oracle_home,\n\t\t\t\tbash_profile              => $bash_profile,\n\t\t\t\tuser                      => $user,\n\t\t\t\tgroup                     => $group,\n\t\t\t\tgroup_install             => $group_install,\n\t\t\t\tgroup_oper                => $group_oper,\n\t\t\t\tgroup_backup              => $group_backup,\n\t\t\t\tgroup_dg                  => $group_dg,\n\t\t\t\tgroup_km                  => $group_km,\n\t\t\t\tgroup_rac                 => $group_rac,\n\t\t\t\tdownload_dir              => $oracle_software_dir,\n\t\t\t\tremote_file               => false,\n\t\t\t\tzip_extract               => false,\n\t\t\t\t} -> Class['uos_oracle_install::install_oracle_common']\n\t\t}\n\t}\n}"
    },
    {
      "name": "uos_oracle_install::install_oracle_common",
      "file": "manifests/install_oracle_common.pp",
      "line": 1,
      "docstring": {
        "text": "",
        "tags": [
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_version"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_base"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_home"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_sid"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "bash_profile"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "user"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "group"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "oracle_software_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "compatible_version"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "control_files"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "control_files_paths"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "agent_directory"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_block_size"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_domain"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_file_multiblock_read_count"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "diagnostic_dest"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "job_queue_processes"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_recovery_file_dest"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "db_recovery_file_dest_size"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "log_archive_dest_1"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "log_archive_dest_10"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "log_archive_format"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "sga_target"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "pga_aggregate_target"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "nls_language"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "nls_territory"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "open_cursors"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "processes"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "remote_login_passwordfile"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "undo_management"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "undo_tablespace"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "nls_sort"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "use_large_pages"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "create_database"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "instance_download_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "listener_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "protocol"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "server_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "port"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "net_service_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "server_type"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "service_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "tnsnames_server_name"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "script_dir"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "script_names"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "script_template_names"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "dba_tools_folder"
          }
        ]
      },
      "defaults": {
        "oracle_version": "undef",
        "oracle_base": "'/oracle01/app/Oracle'",
        "oracle_home": "undef",
        "oracle_sid": "'orcl'",
        "bash_profile": "true",
        "user": "'oracle'",
        "group": "'oracle'",
        "oracle_software_dir": "undef",
        "compatible_version": "$oracle_version",
        "control_files": "undef",
        "control_files_paths": "undef",
        "agent_directory": "undef",
        "db_block_size": "undef",
        "db_domain": "undef",
        "db_file_multiblock_read_count": "undef",
        "diagnostic_dest": "undef",
        "job_queue_processes": "undef",
        "db_recovery_file_dest": "undef",
        "db_recovery_file_dest_size": "undef",
        "log_archive_dest_1": "undef",
        "log_archive_dest_10": "undef",
        "log_archive_format": "undef",
        "sga_target": "undef",
        "pga_aggregate_target": "undef",
        "nls_language": "undef",
        "nls_territory": "undef",
        "open_cursors": "undef",
        "processes": "undef",
        "remote_login_passwordfile": "undef",
        "undo_management": "undef",
        "undo_tablespace": "undef",
        "nls_sort": "undef",
        "use_large_pages": "undef",
        "create_database": "true",
        "instance_download_dir": "undef",
        "listener_name": "undef",
        "protocol": "undef",
        "server_name": "undef",
        "port": "undef",
        "net_service_name": "undef",
        "server_type": "undef",
        "service_name": "undef",
        "tnsnames_server_name": "undef",
        "script_dir": "undef",
        "script_names": "undef",
        "script_template_names": "undef",
        "dba_tools_folder": "undef"
      },
      "source": "class uos_oracle_install::install_oracle_common(\n\t$oracle_version                 = undef,                #['11.2.0.1','11.2.0.3','11.2.0.4','12.1.0.1','12.1.0.2','12.2.0.1', '18.0.0.0'] on oradb v3.0.18\n        $oracle_base                    = '/oracle01/app/Oracle',\n        $oracle_home                    = undef,\n        $oracle_sid                     = 'orcl',\n        $bash_profile                   = true,                 #append bash_profile (ORACLE_HOME, ORACLE_LIB, PATH)\n        $user                           = 'oracle',             #user that will USE the db\n        $group                          = 'oracle',             #user's group\n        $oracle_software_dir            = undef,                #folder there $oracle_software_file resides\n\n        #oracle SID file values\n        #default values specified in create_initsid.pp file\n        $compatible_version              = $oracle_version,\n        $control_files                   = undef,\n        $control_files_paths             = undef,\n\t\t$agent_directory                 = undef,\n        $db_block_size                   = undef,\n        $db_domain                       = undef,\n        $db_file_multiblock_read_count   = undef,\n        $diagnostic_dest                 = undef,\n        $job_queue_processes             = undef,\n        $db_recovery_file_dest           = undef,\n        $db_recovery_file_dest_size      = undef,\n        $log_archive_dest_1              = undef,\n        $log_archive_dest_10             = undef,\n        $log_archive_format              = undef,\n        $sga_target                      = undef,\n        $pga_aggregate_target            = undef,\n        $nls_language                    = undef,\n        $nls_territory                   = undef,\n        $open_cursors                    = undef,\n        $processes                       = undef,\n        $remote_login_passwordfile       = undef,\n        $undo_management                 = undef,\n        $undo_tablespace                 = undef,\n        $nls_sort                        = undef,\n        $use_large_pages                 = undef,\n\n        #oracle database creation values\n        #default values specified in create_database.pp file\n        $create_database                = true,\n        $instance_download_dir          = undef,\n        $listener_name                  = undef,\n        $protocol                       = undef,\n        $server_name                    = undef,\n        $port                           = undef,\n        $net_service_name               = undef,\n        $server_type                    = undef,\n        $service_name                   = undef,\n        $tnsnames_server_name           = undef,\n        $script_dir                     = undef,\n        $script_names                   = undef,\n\t\t$script_template_names          = undef,\n\t\t$dba_tools_folder               = undef,\n\t){\n\t#add oracle sid to .bash_profile\n        file_line{ 'add ORACLE_SID':\n            ensure                    => present,\n            line                      => \"ORACLE_SID=${oracle_sid}; export ORACLE_SID\",\n            path                      => \"/home/${user}/.bash_profile\",\n        } ->\n\n        #reload bash profile\n        exec{ 'reload bash':\n            user                      => $user,\n            command                   => \"/usr/bin/bash -c 'source /home/${user}/.bash_profile'\",\n            require                   => File_line['add ORACLE_SID'],\n        } ->\n\t\t\n\t\t#moving oracle installation .rsp file to agents oracle user home directory\n\t\tfile{ 'copy_.rsp':\n\t\t\tpath\t\t\t\t\t  => \"/home/${user}/db_install_${oracle_version}_oracle_installation.rsp\",\n\t\t\tsource\t\t\t\t\t  => \"${oracle_software_dir}/db_install_${oracle_version}_oracle_installation.rsp\",\n\t\t\tensure  \t\t\t\t  => present,\n\t\t\towner   \t\t\t\t  => $user,\n\t\t\tmode    \t\t\t\t  => '750',\n\t\t} ->\n\t/*\t\n\t\t#remove the original .rsp file from the mount point\n\t\tfile{ 'remove_.rsp':\n\t\t\tpath\t\t\t\t\t  => \"${oracle_software_dir}/db_install_${oracle_version}_oracle_installation.rsp\",\n\t\t\tensure  \t\t\t\t  => absent,\n\t\t} ->\n\t*/\t\t\n\n        #set init<SID>.ora file and directory structure\n        class{ 'uos_oracle_install::create_initsid':\n            oracle_home                  => $oracle_home,\n            oracle_base                  => $oracle_base,\n            oracle_sid                   => $oracle_sid,\n            user                         => $user,\n            group                        => $group,\n\n            compatible                   => $compatible_version,\n            control_files                => $control_files,\n            control_files_paths          => $control_files_paths,\n\t\t\tagent_directory              => $agent_directory,\n            db_block_size                => $db_block_size,\n            db_domain                    => $db_domain,\n            db_file_multiblock_read_count=> $db_file_multiblock_read_count,\n            diagnostic_dest              => $diagnostic_dest,\n            job_queue_processes          => $job_queue_processes,\n            db_recovery_file_dest        => $db_recovery_file_dest,\n            db_recovery_file_dest_size   => $db_recovery_file_dest_size,\n            log_archive_dest_1           => $log_archive_dest_1,\n            log_archive_dest_10          => $log_archive_dest_10,\n            log_archive_format           => $log_archive_format,\n            sga_target                   => $sga_target,\n            pga_aggregate_target         => $pga_aggregate_target,\n            nls_language                 => $nls_language,\n            nls_territory                => $nls_territory,\n            open_cursors                 => $open_cursors,\n            processes                    => $processes,\n            remote_login_passwordfile    => $remote_login_passwordfile,\n            undo_management              => $undo_management,\n            undo_tablespace              => $undo_tablespace,\n            nls_sort                     => $nls_sort,\n            use_large_pages              => $use_large_pages,\n        }\n\t\t\n        if $create_database{\n            #run sql scripts to create physical database instance and populate the db\n\t    Class['uos_oracle_install::create_initsid'] -> Class['uos_oracle_install::create_database']\n            \n\t    class{\"uos_oracle_install::create_database\":\n                user                         => $user,\n                group                        => $group,\n                oracle_home                  => $oracle_home,\n                instance_name                => $oracle_sid,\n                instance_download_dir        => $instance_download_dir,\n\n                listener_name                => $listener_name,\n                protocol                     => $protocol,\n                server_name                  => $server_name,\n                port                         => $port,\n\n                net_service_name             => $net_service_name,\n                server_type                  => $server_type,\n                service_name                 => $net_service_name,\n                tnsnames_server_name         => $tnsnames_server_name,\n\n                script_dir                   => $script_dir,\n                script_names                 => $script_names,\n\t\tscript_template_names        => $script_template_names,\n\t\tdba_tools_folder             => $dba_tools_folder,\n            }\n        }\n}"
    },
    {
      "name": "uos_oracle_install::test",
      "file": "manifests/test.pp",
      "line": 1,
      "docstring": {
        "text": "",
        "tags": [
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "Any"
            ],
            "name": "value"
          }
        ]
      },
      "defaults": {
        "value": "\"bla/bla/bla\""
      },
      "source": "class uos_oracle_install::test(\n    $value   = \"bla/bla/bla\",\n    ){\n\n    notify{ \"---> ${value} <---\": }\n\n}"
    }
  ],
  "defined_types": [

  ],
  "resource_types": [

  ],
  "providers": [

  ],
  "puppet_functions": [
    {
      "name": "dirtree",
      "file": "lib/puppet/parser/functions/dirtree.rb",
      "line": 33,
      "type": "ruby3x",
      "signatures": [
        {
          "signature": "dirtree()",
          "docstring": {
            "text": "This function accepts a string or array of strings containing an absolute directory\npath and will return an array of each parent directory of the path(s).\n\nAn optional second parameter can be supplied that contains a path to exclude\nfrom the resulting array.\n\n*Examples:*\n\n    dirtree('/usr/share/puppet')\n    Will return: ['/usr', '/usr/share', '/usr/share/puppet']\n\n    dirtree('C:\\\\windows\\\\system32\\\\drivers')\n    Will return: [\"C:\\\\windows\", \"C:\\\\windows\\\\system32\", \"C:\\\\windows\\\\system32\\\\drivers\"]\n\n    dirtree('/usr/share/puppet', '/usr')\n    Will return: ['/usr/share', '/usr/share/puppet']\n\n    dirtree('C:\\\\windows\\\\system32\\\\drivers', 'C:\\\\windows')\n    Will return: ['C:\\\\windows\\\\system32', 'C:\\\\windows\\\\system32\\\\drivers']",
            "tags": [
              {
                "tag_name": "return",
                "text": "",
                "types": [
                  "Any"
                ]
              }
            ]
          }
        }
      ],
      "docstring": {
        "text": "This function accepts a string or array of strings containing an absolute directory\npath and will return an array of each parent directory of the path(s).\n\nAn optional second parameter can be supplied that contains a path to exclude\nfrom the resulting array.\n\n*Examples:*\n\n    dirtree('/usr/share/puppet')\n    Will return: ['/usr', '/usr/share', '/usr/share/puppet']\n\n    dirtree('C:\\\\windows\\\\system32\\\\drivers')\n    Will return: [\"C:\\\\windows\", \"C:\\\\windows\\\\system32\", \"C:\\\\windows\\\\system32\\\\drivers\"]\n\n    dirtree('/usr/share/puppet', '/usr')\n    Will return: ['/usr/share', '/usr/share/puppet']\n\n    dirtree('C:\\\\windows\\\\system32\\\\drivers', 'C:\\\\windows')\n    Will return: ['C:\\\\windows\\\\system32', 'C:\\\\windows\\\\system32\\\\drivers']",
        "tags": [
          {
            "tag_name": "return",
            "text": "",
            "types": [
              "Any"
            ]
          }
        ]
      },
      "source": "newfunction(:dirtree, :type => :rvalue, :doc => <<-EOS\nThis function accepts a string or array of strings containing an absolute directory\npath and will return an array of each parent directory of the path(s).\n\nAn optional second parameter can be supplied that contains a path to exclude\nfrom the resulting array.\n\n*Examples:*\n\n  dirtree('/usr/share/puppet')\n  Will return: ['/usr', '/usr/share', '/usr/share/puppet']\n\n  dirtree('C:\\\\windows\\\\system32\\\\drivers')\n  Will return: [\"C:\\\\windows\", \"C:\\\\windows\\\\system32\", \"C:\\\\windows\\\\system32\\\\drivers\"]\n\n  dirtree('/usr/share/puppet', '/usr')\n  Will return: ['/usr/share', '/usr/share/puppet']\n\n  dirtree('C:\\\\windows\\\\system32\\\\drivers', 'C:\\\\windows')\n  Will return: ['C:\\\\windows\\\\system32', 'C:\\\\windows\\\\system32\\\\drivers']\n  EOS\n) do |arguments|\n  paths   = arguments[0]\n  exclude = arguments[1] || '/'\n\n  unless paths.is_a?(String) or paths.is_a?(Array)\n    raise Puppet::ParseError, \"dirtree(): expected first argument to be a String or an Array, got #{paths.inspect}\"\n  end\n\n  unless exclude.is_a?(String)\n    raise Puppet::ParseError, \"dirtree(): expected second argument to be a String, got #{exclude.inspect}\"\n  end\n\n  unless Puppet::Util.absolute_path?(exclude, :posix) or Puppet::Util.absolute_path?(exclude, :windows)\n    raise Puppet::ParseError, \"dirtree(): #{exclude.inspect} is not an absolute exclusion path.\"\n  end\n\n  paths = [ paths ] if paths.is_a?(String)\n\n  # If exclude path in windows format, ensure path separators are all \"\\\\\"\n  Puppet::Util.absolute_path?(exclude, :windows) ? exclude.gsub!('/','\\\\') : nil\n\n  result = []\n  paths.each do |path|\n    is_posix = Puppet::Util.absolute_path?(path, :posix)\n    is_windows = Puppet::Util.absolute_path?(path, :windows)\n\n    unless is_posix or is_windows\n      raise Puppet::ParseError, \"dirtree(): #{path.inspect} is not an absolute path.\"\n    end\n\n    # If path is in windows format, ensure path separators are all \"\\\\\"\n    is_windows ? path.gsub!('/','\\\\') : nil\n\n    sep = is_posix ? '/' : '\\\\'\n\n    # If the last character is the separator, discard it\n    path[-1, 1] == sep ? path.chop! : nil\n    exclude[-1, 1] == sep ? exclude.chop! : nil\n\n    # Start trimming and pushing to the new array\n    # If the path is a posix path, the string will be empty when done parsing\n    # If the path is a windows path, the string will have the drive letter and a colon when done parsing.\n    # If the path is already shorter then the exclude path, no output will be generated.\n    while ( path != '' and is_posix ) or ( path.length > 2 and is_windows ) and ( not exclude.start_with?(path) )\n      result.unshift(path)\n      path = path[0..path.rindex(sep)].chop\n    end\n  end\n\n  return result.uniq\nend"
    },
    {
      "name": "uos_oracle_install::time_check",
      "file": "functions/time_check.pp",
      "line": 8,
      "type": "puppet",
      "signatures": [
        {
          "signature": "uos_oracle_install::time_check(String $start = \"00:00:00\", String $end = \"23:59:59\")",
          "docstring": {
            "text": "",
            "tags": [
              {
                "tag_name": "param",
                "text": "",
                "types": [
                  "String"
                ],
                "name": "start"
              },
              {
                "tag_name": "param",
                "text": "",
                "types": [
                  "String"
                ],
                "name": "end"
              },
              {
                "tag_name": "return",
                "text": "",
                "types": [
                  "Any"
                ]
              }
            ]
          }
        }
      ],
      "docstring": {
        "text": "",
        "tags": [
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "String"
            ],
            "name": "start"
          },
          {
            "tag_name": "param",
            "text": "",
            "types": [
              "String"
            ],
            "name": "end"
          },
          {
            "tag_name": "return",
            "text": "",
            "types": [
              "Any"
            ]
          }
        ]
      },
      "defaults": {
        "start": "\"00:00:00\"",
        "end": "\"23:59:59\""
      },
      "source": "function uos_oracle_install::time_check(\n        String $start   = \"00:00:00\",\n        String $end     = \"23:59:59\",\n    ){\n\n    $current_time = generate('/bin/date', '+%T')\n        \n    #it is very important that time is specified WITH any in format \"HH:MM:SS\" with 2 symbols, even if they are zeroes, \n    #for hours, minutes and seconds\n    $value = ($start <= $current_time) and ($current_time <= $end)\n    $value\n}"
    }
  ],
  "puppet_tasks": [

  ],
  "puppet_plans": [

  ]
}
